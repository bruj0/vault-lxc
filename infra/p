#!/bin/bash -e
####
# INFRA
###
# To enable debug: export DEBUG=true
# Enable debug if the env variable DEBUG is set to true
if [[ "$DEBUG" == "true" ]];then
    set -x
fi
#External variables
case "$0" in
    "infra/p")
        export VAULT_CLUSTER="primary"
    ;;
    "infra/s")
        export VAULT_CLUSTER="secondary"
    ;;
    "infra/dr")
        export VAULT_CLUSTER="dr"
    ;;
esac
#Internal variables
VAULT_VERSION="1.3.4"
bold=$(tput bold)
normal=$(tput sgr0)
typeset -a VAULT_primary_PORTS=("9201" "9202" "9203")
typeset -a VAULT_secondary_PORTS=("9301" "9302" "9303")
typeset -a VAULT_dr_PORTS=("9401" "9402" "9403")

case "$1" in
     help)
        echo "${bold}Usage: $0 <command> <subcommand>${normal}"
        echo ""
        echo "${bold}sh${normal}: <container>"
        echo "${bold}status${normal}: <systemd service>"
        echo "${bold}exec_vault${normal}: <command>"        
        echo "${bold}exec_consul${normal}: <command>"
        echo "${bold}exec${normal}: <container> <command>"
        echo "${bold}logs${normal}: <container> <systemd service>"
        echo "${bold}restart_vault${normal}"
        echo "${bold}restart_consul${normal}"
        echo "${bold}wipe_consul${normal}: stop consul and wipe data"
        echo "${bold}wipe_raft${normal}:  wipe raft data"

    ;;     
    "sh")
        lxc exec ${VAULT_CLUSTER}-$2 bash
    ;;
    "status")
            set +e
        for i in "vault01" "vault02" "vault03" "unsealer" "pki"; do
            echo "${VAULT_CLUSTER}-${i}:"
            lxc exec ${VAULT_CLUSTER}-${i} --  systemctl -o short --no-pager --lines 0 status $2
        done
        if [ "${2}" == "consul" ]; then
            for i in "consul01" "consul02" "consul03"; do
                lxc exec ${VAULT_CLUSTER}-${i} -- systemctl -o short --no-pager --lines 0 status $2
            done
        fi    
    ;;
    "exec_vault")
        set +e
        for i in "vault01" "vault02" "vault03" "unsealer" "pki"; do
            echo "Execution in ${VAULT_CLUSTER}-${i}: -- -- ${@:2}"
            lxc exec ${VAULT_CLUSTER}-${i} -- ${@:2}
        done
    ;;
    "exec_consul")
        set +e
        for i in "consul01" "consul02" "consul03"; do
            echo "Execution in ${VAULT_CLUSTER}-${i}: ${@:2}"
            lxc exec ${VAULT_CLUSTER}-${i} -- ${@:2}
        done
    ;;
    "exec")
        lxc exec ${VAULT_CLUSTER}-$2 -- ${@:3}
    ;;     
    "logs")
            lxc exec ${VAULT_CLUSTER}-$2 -- journalctl -o cat --no-pager -b -f -u $3 | grep -v checkpoint
    ;;
    "restart_vault")

            for i in "vault01" "vault02" "vault03"; do
                    echo "Restart in ${VAULT_CLUSTER}-${i}."
                    lxc exec ${VAULT_CLUSTER}-$i -- systemctl restart vault
            done
    ;;
    "restart_consul")

            for i in "consul01" "consul03" "consul02"; do
                    echo "Restart in ${VAULT_CLUSTER}-${i}."
                    lxc exec ${VAULT_CLUSTER}-$i -- systemctl restart consul
            done
    ;;
    "start_consul")

            for i in "consul01" "consul03" "consul02" "vault01" "vault02" "vault03"; do
                    echo "Starting Consul in ${i}."
                    lxc exec ${VAULT_CLUSTER}-$i -- systemctl start consul
            done
    ;;    
    "wipe_consul")
            for i in "consul01" "consul03" "consul02" "vault01" "vault02" "vault03"; do
                    echo "Wiping in ${VAULT_CLUSTER}-${i}."
                    lxc exec ${VAULT_CLUSTER}-$i -- systemctl stop consul
                    lxc exec ${VAULT_CLUSTER}-$i -- rm -fr /var/consul/data
            done
    ;;
    "wipe_raft")
            for i in "vault01" "vault02" "vault03"; do
                    echo "Wiping in ${VAULT_CLUSTER}-${i}."
                    lxc exec ${VAULT_CLUSTER}-$i -- systemctl stop vault
                    lxc exec ${VAULT_CLUSTER}-$i -- rm -fr /var/vault_data/*
            done
    ;;
esac